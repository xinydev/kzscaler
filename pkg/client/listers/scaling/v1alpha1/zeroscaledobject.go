/*
Copyright 2022 XinYang

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kzscaler/kzscaler/pkg/apis/scaling/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ZeroScaledObjectLister helps list ZeroScaledObjects.
// All objects returned here must be treated as read-only.
type ZeroScaledObjectLister interface {
	// List lists all ZeroScaledObjects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZeroScaledObject, err error)
	// ZeroScaledObjects returns an object that can list and get ZeroScaledObjects.
	ZeroScaledObjects(namespace string) ZeroScaledObjectNamespaceLister
	ZeroScaledObjectListerExpansion
}

// zeroScaledObjectLister implements the ZeroScaledObjectLister interface.
type zeroScaledObjectLister struct {
	indexer cache.Indexer
}

// NewZeroScaledObjectLister returns a new ZeroScaledObjectLister.
func NewZeroScaledObjectLister(indexer cache.Indexer) ZeroScaledObjectLister {
	return &zeroScaledObjectLister{indexer: indexer}
}

// List lists all ZeroScaledObjects in the indexer.
func (s *zeroScaledObjectLister) List(selector labels.Selector) (ret []*v1alpha1.ZeroScaledObject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZeroScaledObject))
	})
	return ret, err
}

// ZeroScaledObjects returns an object that can list and get ZeroScaledObjects.
func (s *zeroScaledObjectLister) ZeroScaledObjects(namespace string) ZeroScaledObjectNamespaceLister {
	return zeroScaledObjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ZeroScaledObjectNamespaceLister helps list and get ZeroScaledObjects.
// All objects returned here must be treated as read-only.
type ZeroScaledObjectNamespaceLister interface {
	// List lists all ZeroScaledObjects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZeroScaledObject, err error)
	// Get retrieves the ZeroScaledObject from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ZeroScaledObject, error)
	ZeroScaledObjectNamespaceListerExpansion
}

// zeroScaledObjectNamespaceLister implements the ZeroScaledObjectNamespaceLister
// interface.
type zeroScaledObjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ZeroScaledObjects in the indexer for a given namespace.
func (s zeroScaledObjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ZeroScaledObject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZeroScaledObject))
	})
	return ret, err
}

// Get retrieves the ZeroScaledObject from the indexer for a given namespace and name.
func (s zeroScaledObjectNamespaceLister) Get(name string) (*v1alpha1.ZeroScaledObject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("zeroscaledobject"), name)
	}
	return obj.(*v1alpha1.ZeroScaledObject), nil
}
